@inherits LayoutComponentBase
@inject BlazorPeliculas.Client.Auth.RenovadorToken renovadorToken
@inject IJSRuntime js
@inject NavigationManager navigationManager

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0" Style="color:white;">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />

        <EnlacesLogin />

    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1" Color="Color.Primary" Style="color:white;">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="pt-5">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code{

    [CascadingParameter] public Task<AuthenticationState> authenticationState { get; set; }


    bool _drawerOpen = false;
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected override async Task OnInitializedAsync()
    {
        await js.InicializarTimerInactivo(DotNetObjectReference.Create(this));
        renovadorToken.Iniciar();
    }

    [JSInvokable]
    public async Task Logout()
    {
        var authState = await authenticationState;
        if(authState.User.Identity.IsAuthenticated)
        {
            navigationManager.NavigateTo("logout");
        }
    } 
}